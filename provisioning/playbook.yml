---
- hosts: all
  become: true
  vars_files:
    - vars/vars.yml

  handlers:
    - name: Reload Apache
      service:
        name: apache2
        state: reloaded

    - name: Restart Apache
      service:
        name: apache2
        state: restarted

    - name: start mysql
      service: name=mysql
               enabled=yes
               state=started

    - name: restart mysql
      service: name=mysql
               enabled=yes
               state=restarted


  tasks:
    - name: Install prerequisites
      apt: name=aptitude update_cache=yes state=latest force_apt_get=yes
      tags: [ system ]

    # - name: Install LAMP Packages
    #   apt: name={{ item }} update_cache=yes state=latest
    #   loop: [ 'apache2', 'mysql-server', 'python3-pymysql', 'php', 'php-mysql', 'libapache2-mod-php' ]
    #   tags: [ system ]

    # - name: Install PHP Extensions
    #   apt: name={{ item }} update_cache=yes state=latest
    #   loop: "{{ php_modules }}"
    #   tags: [ system ]

    - block: # Install Wordpress, PHP and Apache on WP server

      - name: Install Apache, Python and PHP
        apt: name={{ item }} update_cache=yes state=latest
        loop: [ 'apache2', 'php', 'php-mysql', 'libapache2-mod-php' ]
        tags: [ system ]

      - name: Install PHP Extensions
        apt: name={{ item }} update_cache=yes state=latest
        loop: "{{ php_modules }}"
        tags: [ system ]

      # Apache config
      - name: Create document root
        file:
          path: "/var/www/{{ http_host }}"
          state: directory
          owner: "www-data"
          group: "www-data"
          mode: '0755'
        tags: [ apache ]

      - name: Set up Apache VirtualHost
        template:
          src: "files/apache.conf.j2"
          dest: "/etc/apache2/sites-available/{{ http_conf }}"
        notify: Reload Apache
        tags: [ apache ]

      - name: Enable rewrite module
        shell: /usr/sbin/a2enmod rewrite
        notify: Reload Apache
        tags: [ apache ]

      - name: Enable new site
        shell: /usr/sbin/a2ensite {{ http_conf }}
        notify: Reload Apache
        tags: [ apache ]

      - name: Disable default Apache site
        shell: /usr/sbin/a2dissite 000-default.conf
        notify: Restart Apache
        tags: [ apache ]

      # WordPress Configuration
      - name: Download and unpack latest WordPress
        unarchive:
          src: https://wordpress.org/latest.tar.gz
          dest: "/var/www/{{ http_host }}"
          remote_src: yes
          creates: "/var/www/{{ http_host }}/wordpress"
        tags: [ wordpress ]

      - name: Set ownership
        file:
          path: "/var/www/{{ http_host }}"
          state: directory
          recurse: yes
          owner: www-data
          group: www-data
        tags: [ wordpress ]

      - name: Set permissions for directories
        shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type d -exec chmod 750 {} \\;"
        tags: [ wordpress ]

      - name: Set permissions for files
        shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type f -exec chmod 640 {} \\;"
        tags: [ wordpress ]

      - name: Set up wp-config
        template:
          src: "files/wp-config.php.j2"
          dest: "/var/www/{{ http_host }}/wordpress/wp-config.php"
        tags: [ wordpress ]

        # UFW Configuration
      - name: "UFW - Allow HTTP on port {{ http_port }}"
        ufw:
          rule: allow
          port: "{{ http_port }}"
          proto: tcp
        tags: [ system ]

      when: (ansible_facts['nodename']) == 'wpserver'

    - block: # Install and configure MariaDB on DB server

      - name: Install DB
        apt: name={{ item }} update_cache=yes state=latest
        loop: [ 'mysql-server', 'python3-pymysql' ]
        tags: [ system ]

      # MySQL Configuration
      - name: Set the root password
        mysql_user:
          name: root
          password: "{{ mysql_root_password }}"
          login_unix_socket: /var/run/mysqld/mysqld.sock
        tags: [ mysql, mysql-root ]

      - name: Remove all anonymous user accounts
        mysql_user:
          name: ''
          host_all: yes
          state: absent
          login_user: root
          login_password: "{{ mysql_root_password }}"
        tags: [ mysql ]

      - name: Remove the MySQL test database
        mysql_db:
          name: test
          state: absent
          login_user: root
          login_password: "{{ mysql_root_password }}"
        tags: [ mysql ]

      - name: Creates database for WordPress
        mysql_db:
          name: "{{ mysql_db }}"
          state: present
          login_user: root
          login_password: "{{ mysql_root_password }}"
        tags: [ mysql ]

      - name: Create MySQL user for WordPress
        mysql_user:
          name: "{{ mysql_user }}"
          password: "{{ mysql_password }}"
          priv: "{{ mysql_db }}.*:ALL"
          host: "{{ msql_remote_host_ip }}"
          state: present
          login_user: root
          login_password: "{{ mysql_root_password }}"
        tags: [ mysql ]
        notify:
          - start mysql

      - name: Configure my.cnf
        copy: src=./files/my.cnf
              dest=/etc/mysql/my.cnf
              owner=root
              group=root
              mode=0640
        notify:
          - restart mysql



      when: (ansible_facts['nodename']) == 'dbserver'
...
